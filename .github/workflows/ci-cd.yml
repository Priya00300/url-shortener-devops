# .github/workflows/ci-cd.yml
# Complete CI/CD Pipeline for URL Shortener

name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  DOCKER_USERNAME: priiya03
  REDIRECTOR_IMAGE: priiya03/redirector-service
  ANALYTICS_IMAGE: priiya03/analytics-service

jobs:
  # Job 1: Test Redirector Service
  test-redirector:
    name: Test Redirector Service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./redirector-service
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: ./redirector-service/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/test

    - name: Upload coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: redirector-coverage
        path: ./redirector-service/coverage

  # Job 2: Test Analytics Service
  test-analytics:
    name: Test Analytics Service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./analytics-service
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: ./analytics-service/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/test

    - name: Upload coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: analytics-coverage
        path: ./analytics-service/coverage

  # Job 3: Build and Push Docker Images
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: [test-redirector, test-analytics]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata for Redirector
      id: meta-redirector
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REDIRECTOR_IMAGE }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Redirector Service
      uses: docker/build-push-action@v5
      with:
        context: ./redirector-service
        file: ./redirector-service/Dockerfile
        push: true
        tags: ${{ steps.meta-redirector.outputs.tags }}
        labels: ${{ steps.meta-redirector.outputs.labels }}
        cache-from: type=registry,ref=${{ env.REDIRECTOR_IMAGE }}:buildcache
        cache-to: type=registry,ref=${{ env.REDIRECTOR_IMAGE }}:buildcache,mode=max

    - name: Extract metadata for Analytics
      id: meta-analytics
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.ANALYTICS_IMAGE }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Analytics Service
      uses: docker/build-push-action@v5
      with:
        context: ./analytics-service
        file: ./analytics-service/Dockerfile
        push: true
        tags: ${{ steps.meta-analytics.outputs.tags }}
        labels: ${{ steps.meta-analytics.outputs.labels }}
        cache-from: type=registry,ref=${{ env.ANALYTICS_IMAGE }}:buildcache
        cache-to: type=registry,ref=${{ env.ANALYTICS_IMAGE }}:buildcache,mode=max

    - name: Image digest
      run: |
        echo "Redirector: ${{ steps.meta-redirector.outputs.tags }}"
        echo "Analytics: ${{ steps.meta-analytics.outputs.tags }}"

  # Job 4: Deploy to Kubernetes (Optional - requires K8s cluster access)
  deploy-kubernetes:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    # Uncomment and configure if you want to deploy to a remote K8s cluster
    # - name: Configure kubectl
    #   run: |
    #     mkdir -p $HOME/.kube
    #     echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config

    # - name: Deploy to Kubernetes
    #   run: |
    #     kubectl apply -f k8s/namespace.yaml
    #     kubectl apply -f k8s/configmap.yaml
    #     kubectl apply -f k8s/analytics-deployment.yaml
    #     kubectl apply -f k8s/redirector-deployment.yaml
    #     kubectl rollout status deployment/redirector-service -n url-shortener
    #     kubectl rollout status deployment/analytics-service -n url-shortener

    - name: Deployment Summary
      run: |
        echo "âœ… Docker images built and pushed successfully!"
        echo "ðŸš€ Redirector: ${{ env.REDIRECTOR_IMAGE }}:latest"
        echo "ðŸ“Š Analytics: ${{ env.ANALYTICS_IMAGE }}:latest"
        echo ""
        echo "To deploy to your local k3d cluster, run:"
        echo "kubectl rollout restart deployment/redirector-service -n url-shortener"
        echo "kubectl rollout restart deployment/analytics-service -n url-shortener"