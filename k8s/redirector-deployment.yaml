# k8s/redirector-deployment.yaml
# Redirector Service Kubernetes Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redirector-service
  namespace: url-shortener
  labels:
    app: redirector-service
    tier: backend
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redirector-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: redirector-service
        tier: backend
        version: v1
    spec:
      containers:
      - name: redirector-service
        image:  priiya03/redirector-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongodb-uri
        - name: ANALYTICS_SERVICE_URL
          value: "http://analytics-service:3002"
        - name: BASE_URL
          value: "http://localhost:8080"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3

---
# Redirector Service - Kubernetes Service (LoadBalancer)
apiVersion: v1
kind: Service
metadata:
  name: redirector-service
  namespace: url-shortener
  labels:
    app: redirector-service
spec:
  type: LoadBalancer
  selector:
    app: redirector-service
  ports:
  - port: 80
    targetPort: 3001
    protocol: TCP
    name: http
  sessionAffinity: None
